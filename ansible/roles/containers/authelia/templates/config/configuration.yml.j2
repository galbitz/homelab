---
###############################################################
#                   Authelia configuration                    #
###############################################################

server:
  address: tcp://0.0.0.0:9091
log:
  level: info
theme: dark
identity_validation:
  reset_password:
    jwt_secret: "{{ containers_authelia_jwt_secret }}"

totp:
  issuer: authelia.com

# duo_api:
#  hostname: api-123456789.example.com
#  integration_key: ABCDEF
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: 1234567890abcdefghifjkl

authentication_backend:
  file:
    path: /config/users_database.yml
    password:
      algorithm: argon2
      # Recommended Parameters
      # Uses 2 GiB memory, then immediately releases it.
      # See https://www.authelia.com/reference/guides/passwords/#recommended-parameters-argon2
      # See https://www.rfc-editor.org/rfc/rfc9106.html#section-4 for details on tuning the parameters for your hardware.
      # After saving configuration file, password hash can be generated by running: docker run -v ./configuration.yml:/configuration.yml --rm authelia/authelia:latest authelia crypto hash generate --config /configuration.yml --password 'yourpassword'
      argon2:
        variant: argon2id
        iterations: 1
        memory: 2097152
        parallelism: 4
        key_length: 32
        salt_length: 16
      # Recommended Parameters when constrained by low memory or low powered hardware. Uses 64 KiB memory, then immediately releases it.
      # argon2:
      #   variant: argon2id
      #   iterations: 3
      #   memory: 65536
      #   parallelism: 4
      #   key_length: 32
      #   salt_length: 16

access_control:
{{ containers_authelia_access_rules | to_nice_yaml() | indent(2, True) }}

session:
  name: authelia_session
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  secret: "{{ containers_authelia_session_secret }}"
  expiration: 10m # 1 hour
  inactivity: 300 # 5 minutes
  same_site: lax
  cookies:
    - domain: {{ containers_authelia_session_cookie_domain }} 
      authelia_url: "{{ containers_authelia_authelia_url }}"

  # redis:
  #   host: redis
  #   port: 6379
  #   # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
  #   # password: authelia

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
  encryption_key: "{{ containers_authelia_encryption_key }}" # Now required
  local:
    path: /config/db.sqlite3

notifier:
  # smtp:
  #   username: test
  #   # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
  #   password: password
  #   host: mail.example.com
  #   port: 25
  #   sender: admin@example.com
  filesystem:
    filename: /config/notification.txt

identity_providers:
  oidc:
    hmac_secret: "{{ containers_authelia_hmac_secret }}"
    enable_client_debug_messages: true
#    cors:
#      endpoints: ["authorization", "token", "revocation", "introspection"]
#      allowed_origins: "*"
    jwks:
      - key_id: "authelia"
        use: 'sig'
        algorithm: 'RS256'
        key: |
            -----BEGIN PRIVATE KEY-----
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDZTB3X1Uy84tZj
            v5fJBEAN8I0j9JxWtEQR1GuR3E4ZO26HWp2DGHslL32958RkHdN2l6L1m6BnSEBa
            u7tkzsExxnNsMdE1/EIq2Yrnwp6LaxB5ktJuqyBmRqXopmNT1BYCSWPggUQhgrbM
            pL1L6lmOmhbHUe93gRqkOa34aA8qs4mE1/DbHD/pYCDgJz0Uifu6d42fe75hrmt/
            sJx5SbXkkhwhBY7pSt17ifF4x3INAfPiufV8Ep6RRsWfSLBY17Gh9wty6jd7vGkf
            AS1FRYqGxXiVK8Yr4ZGFppm5u4fBuaihRvcmrGCMcAY/PbdFceMA0WRzTRcn2l3I
            0QB+VhrfAgMBAAECggEAHLjFZw5wDrVy/gtIjk7sAouttDd0ZLd+Gdc4graachZb
            dTOihz34pQEifzP/zvXsSgwgA5PW/1/a9cNDsT7s5V3kSsRI8XhO7KgFhr3ARBBa
            RJ+GBg/DgBFNg7NehKmPYSz/MSEU9tL2w5Tw2nR28vTmFuF7JBIiCdv/5Uon2w5S
            wFYwupGj7uuXEDx9YNsFbjueWO5H/ghgJRvclYq3wIVm4v+/0HRDZ8iyQ2m86UeC
            JV4rAKdxicZ5jAGnQzGOsfEjBZdyplBaLH3CQZiJ+Jx2C66Qbnlz4MPYkm30mkBx
            Fsh5xRMfGNsSCYUVpQKGfhiajQW6zPhK0Fu95JbAqQKBgQDtnjInVZ+wVG/JpMQl
            ZN2L79JgNuR2fXAniAPmLA8gN7ORenxcjd5LW90YVvsCJlFr0y9W60ep1JJnDFeG
            RxDXr8FABJnlzOz1LQOgQCZSaVhZKIZRuugSvJLAabWKgRTxXrEpQfTsCq1L2/CA
            o8Y7q+zAgmUpZ3KBekU8oaLr9wKBgQDqG31QGLySZvvWVA/eau/h17S/z59dohBd
            bXTlbR89YS4siwDrivyhIpVHTRfcWBmunaanaDf0kXBnTq8qT3VgwCrrm2WxfCCi
            a+WuBRVrpn5Y6jZc7lcm6z+izzAOecCtaZP4btlY0RM3yr9EXufw5j69/Oz1OPaM
            GK9AG0X+WQKBgBXstdX5SY28jL//SvXkU6jYzQGBrxzbwCB1pV50jES9vvzaX2Uu
            1ecAJ+taAzkUjgiz6LdNaERcT9HgSqciIYS1O9CLXCPe/7IzoBUGNkL+Y19+pL4f
            z9ACxEuqtUx9UpBe21viMRYiehD4zz0fX2gcGfE9VtY2LFOUE5VfmKfLAoGBAJpU
            rPPUmtvY0ESm/h8eWC2GSj343ZKYeDlfIyTsHyATpKDwshaVdZ20cryicgxsd+HJ
            REgwSFMOXg98q7U01KiHhsPzmcK7lbf9cVibOVfSVpC/Nj9lUEbz5uupsoCYexDW
            /RlV2irXCdhJ7HViK32AC/SrfHrcpowM6dtVH3thAoGATtOdKzbUB9BQz92gbFwO
            KbQenNruGguj+q02E05C03Y6uiafPZBdOLBOdKuiDA6ehQoxNpOQNiBHpXpS5nq/
            BpQCsJDL84dYm4DRIWmmP0yGCy4PniIm0BccyoHLhYXXShjPrkNwMfoGCRzZQLMI
            gT18hHenBS7BOFVNypiWQVA=
            -----END PRIVATE KEY-----
        certificate_chain: |
              -----BEGIN CERTIFICATE-----
              MIIDXzCCAkegAwIBAgIUFdsRPV4VZJN5aRv7t2QLCAT1idkwDQYJKoZIhvcNAQEL
              BQAwPzELMAkGA1UEBhMCQ0ExEDAOBgNVBAgMB09udGFyaW8xEDAOBgNVBAcMB1Rv
              cm9udG8xDDAKBgNVBAoMAzA0YTAeFw0yNTA2MDExNjE2NTdaFw0zNTA1MzAxNjE2
              NTdaMD8xCzAJBgNVBAYTAkNBMRAwDgYDVQQIDAdPbnRhcmlvMRAwDgYDVQQHDAdU
              b3JvbnRvMQwwCgYDVQQKDAMwNGEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQDZTB3X1Uy84tZjv5fJBEAN8I0j9JxWtEQR1GuR3E4ZO26HWp2DGHslL329
              58RkHdN2l6L1m6BnSEBau7tkzsExxnNsMdE1/EIq2Yrnwp6LaxB5ktJuqyBmRqXo
              pmNT1BYCSWPggUQhgrbMpL1L6lmOmhbHUe93gRqkOa34aA8qs4mE1/DbHD/pYCDg
              Jz0Uifu6d42fe75hrmt/sJx5SbXkkhwhBY7pSt17ifF4x3INAfPiufV8Ep6RRsWf
              SLBY17Gh9wty6jd7vGkfAS1FRYqGxXiVK8Yr4ZGFppm5u4fBuaihRvcmrGCMcAY/
              PbdFceMA0WRzTRcn2l3I0QB+VhrfAgMBAAGjUzBRMB0GA1UdDgQWBBSJSMHORmjt
              DTns87SaiINOqkTL/TAfBgNVHSMEGDAWgBSJSMHORmjtDTns87SaiINOqkTL/TAP
              BgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCR2OUPpU4P54i4OIPN
              4JB3JggzgTf9zXyi4J2IFB/xDgpipa/v1PtVvw6vz6lhGSai08AYXRM+ns2XFI75
              s+U8na9vQoWFQdCZzvM9Z5zWRmxowwBUVNYmXoM8AhU7kEQdlIcv3V9jUwgCl7I5
              VrsHAzymixEd/C4JXxy15I0ia6xOU9HjlJQCeVFBC0cRv4SqXVo+FYnpicHA5XwH
              t7YlrzVJhtrMebIPRuFfs7MB7AC3EpBD9FzkzMg69fZCZgj3cN93O4Fi2QojKCCL
              B40eCvPNZXAfHLnX+N6iyJrHk0qSQI6kvs6EBGbs3BJhqA4O1TnwbTej4ChfpCJ+
              4ufz
              -----END CERTIFICATE-----

    ## The other portions of the mandatory OpenID Connect 1.0 configuration go here.
    ## See: https://www.authelia.com/c/oidc
    clients: 
{{ containers_authelia_clients | to_nice_yaml() | indent(4, True) }}
