---
tls:
  stores:
    default:
      defaultGeneratedCert:
        resolver: "production"
        domain:
          main: "*.{{ containers_traefik_main_domain }}"
          sans:
            - "*.{{ containers_traefik_tunnel_domain }}"

http:
  services:
    ha:
      loadbalancer:
        servers:
          - url: http://192.168.1.40:8123/
    guac:
      loadbalancer:
        servers:
          - url: http://192.168.1.17:8085/
    uptime:
      loadbalancer:
        servers:
          - url: http://192.168.1.17:3001/
    pihole:
      loadbalancer:
        servers:
          - url: http://192.168.1.4/
  middlewares:
    authelia:
      forwardAuth:
        address: "http://authelia:9091/api/verify?rd=https://auth.{{ containers_traefik_tunnel_domain }}"
  routers:
    ha:
      rule: Host(`ha.{{ containers_traefik_main_domain }}`)
      service: ha
      entrypoints: web
    ha-ssl:
      rule: Host(`ha.{{ containers_traefik_main_domain }}`)
      service: ha
      entrypoints: websecure
      tls: {}
    uptime:
      rule: Host(`uptime.{{ containers_traefik_main_domain }}`)
      service: uptime
      entrypoints: web
    uptime-ssl:
      rule: Host(`uptime.{{ containers_traefik_main_domain }}`)
      service: uptime
      entrypoints: websecure
      tls: {}
    guac:
      rule: Host(`guacamole.{{ containers_traefik_main_domain }}`)
      service: guac
      entrypoints: web
    guac-ssl:
      rule: Host(`guacamole.{{ containers_traefik_main_domain }}`,`access.{{ containers_traefik_tunnel_domain }}`)
      service: guac
      entrypoints: websecure
      tls: {}
      middlewares:
        - authelia      
    pihole:
      rule: Host(`pihole.{{ containers_traefik_main_domain }}`)
      service: pihole
      entrypoints: web
    pihole-ssl:
      rule: Host(`pihole.{{ containers_traefik_main_domain }}`)
      service: pihole
      entrypoints: websecure
      tls: {}
