---
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
networks:
  proxy:
    external: true
  private:
services:
  loki:
    container_name: loki
    image: grafana/loki:3.5.3
    volumes:
      - "{{ containers_grafana_stack_dir }}/loki:/etc/loki"
      - "{{ containers_grafana_stack_dir }}/loki/data:/etc/loki/data"
    # only containers connect to this (grafana, promtail)
    ports:
      - "3100:3100"
    restart: always
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - proxy
#  promtail:
#    container_name: promtail
#    image: grafana/promtail:3.5.0
#    volumes:
#      - /var/log:/var/log # local syslog scraping
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro # docker container log scraping
#      - /var/run/docker.sock:/var/run/docker.sock
#      - "{{ containers_grafana_stack_dir }}/promtail:/etc/promtail"
#    ports:
#      - "1514:1514" # this is only needed if you are going to send syslogs
#    restart: always
#    command: -config.file=/etc/promtail/promtail-config.yml
#    networks:
#      - proxy
  grafana:
    container_name: grafana
    image: grafana/grafana:12.1.0
    user: "1000"
    volumes:
      - "{{ containers_grafana_stack_dir }}/grafana/etc/provisioning:/etc/grafana/provisioning"
      - "{{ containers_grafana_stack_dir }}/grafana/lib:/var/lib/grafana"
    ports:
      - "3000:3000"
    restart: always
    networks:
      - proxy
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_ALLOW_SIGN_UP=false
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.services.grafana.loadbalancer.server.scheme=http"
      - "traefik.http.routers.grafana-http.entrypoints=web"
      - "traefik.http.routers.grafana-https.entrypoints=websecure"
      - "traefik.http.routers.grafana-https.tls=true"  
#  syslog-ng:
#    command: -edv
#    container_name: syslog-ng
#    depends_on:
#      - promtail
#    image: balabit/syslog-ng:4.8.3
#    networks:
#      - proxy
#    ports:
#      - protocol: udp
#        published: 9514
#        target: 514
#      - protocol: tcp
#        published: 9601
#        target: 601
#    volumes:
#      - "{{ containers_grafana_stack_dir }}/syslog-ng/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf:ro"
#    restart: always
  influxdb:
    command: --reporting-disabled
    container_name: influxdb
    image: influxdb:2.7.12
    networks:
      - proxy
    ports:
      - "8086:8086"
    volumes:
      - "{{ containers_grafana_stack_dir }}/influx/data:/var/lib/influxdb2"
      - "{{ containers_grafana_stack_dir }}/influx/config:/etc/influxdb2"
    restart: always
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=influxdb
      - DOCKER_INFLUXDB_INIT_PASSWORD=influxdb
      - DOCKER_INFLUXDB_INIT_ORG=star4
      - DOCKER_INFLUXDB_INIT_BUCKET=home-bucket
      - DOCKER_INFLUXDB_INIT_RETENTION=14d
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=influxdbadmintoken
#  cadvisor:
#    container_name: cadvisor
#    image: gcr.io/cadvisor/cadvisor:v0.52.1
#    networks:
#      - proxy
    # ports:
    #   - "8081:8080"
#    restart: always
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker:/var/lib/docker:ro
#    devices:
#      - /dev/kmsg
  prometheus:
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-admin-api
      - --web.enable-lifecycle
      - --web.enable-remote-write-receiver
    container_name: prometheus
    image: prom/prometheus:v3.5.0
    networks:
      - proxy
    ports:
      - published: 9090
        target: 9090
    restart: always
    volumes:
      - "{{ containers_grafana_stack_dir }}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "{{ containers_grafana_stack_dir }}/prometheus-data:/prometheus"
  alloy:
    container_name: alloy
    image: grafana/alloy:v1.10.0
    hostname: docker-server
    networks:
      - proxy
    ports:
      - "12345:12345"
      - protocol: udp
        published: 9514
        target: 514
    volumes:
      - "{{ containers_grafana_stack_dir }}/alloy/config.alloy:/etc/alloy/config.alloy"
      - "{{ containers_grafana_stack_dir }}/alloy/data:/var/lib/alloy/data"
      - /:/rootfs:ro
      - /run:/run:ro
      - /var/log:/var/log:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker/:ro
      - /run/udev/data:/run/udev/data:ro
    restart: always
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    devices:
      - /dev/kmsg
